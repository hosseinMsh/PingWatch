name: Build and Upload Debian Package

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the 'main' branch

permissions:
  contents: write  # Allow the workflow to write to the repository

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y dpkg-dev debhelper build-essential

      - name: Configure Git
        run: |
          git config --global user.name "hossein"
          git config --global user.email "hossein.masihi@gmail.com"

      - name: Build .deb package
        run: |
          mkdir -p pinghub/debian/usr/local/bin
          cp ./pinghub.sh pinghub/debian/usr/local/bin/pinghub
          chmod +x pinghub/debian/usr/local/bin/pinghub
          dpkg-deb --build pinghub/debian

      - name: Tag release
        id: tag_release
        run: |
          # Check if there are any tags
          if git tag | grep -q .; then
            # Get the latest tag
            latest_tag=$(git describe --tags --abbrev=0)
            echo "Latest tag: $latest_tag"

            # Extract the version number and increment it
            if [[ $latest_tag =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
              major=${BASH_REMATCH[1]}
              minor=${BASH_REMATCH[2]}
              patch=${BASH_REMATCH[3]}
              new_minor=$((minor + 1))
              new_tag="v${major}.${new_minor}.0"
              echo "New tag: $new_tag"
            else
              echo "No valid version tag found. Defaulting to v1.0.0."
              new_tag="v1.0.0"
            fi
          else
            echo "No tags found. Defaulting to v1.0.0."
            new_tag="v1.0.0"
          fi

          # Check if the new tag already exists
          if git rev-parse "$new_tag" >/dev/null 2>&1; then
            echo "Tag $new_tag already exists. Incrementing minor version."
            new_minor=$((minor + 1))
            new_tag="v${major}.${new_minor}.0"
            echo "New tag: $new_tag"
          fi

          # Create and push the new tag
          git tag -a "$new_tag" -m "Release $new_tag"
          git push origin "$new_tag"

      - name: Upload .deb package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pinghub-package
          path: pinghub/debian.deb